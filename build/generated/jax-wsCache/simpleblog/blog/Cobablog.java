
package blog;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "cobablog", targetNamespace = "http://blog/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Cobablog {


    /**
     * 
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://blog/", className = "blog.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://blog/", className = "blog.DeletePostResponse")
    public Boolean deletePost(
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param password
     * @param role
     * @param nama
     * @param email
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://blog/", className = "blog.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://blog/", className = "blog.AddUserResponse")
    public Boolean addUser(
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<blog.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUnpublishedPost", targetNamespace = "http://blog/", className = "blog.ListUnpublishedPost")
    @ResponseWrapper(localName = "listUnpublishedPostResponse", targetNamespace = "http://blog/", className = "blog.ListUnpublishedPostResponse")
    public List<Post> listUnpublishedPost();

    /**
     * 
     * @param id
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteComment", targetNamespace = "http://blog/", className = "blog.DeleteComment")
    @ResponseWrapper(localName = "deleteCommentResponse", targetNamespace = "http://blog/", className = "blog.DeleteCommentResponse")
    public Boolean deleteComment(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param konten
     * @param author
     * @param tanggal
     * @param judul
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://blog/", className = "blog.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://blog/", className = "blog.AddPostResponse")
    public Boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "author", targetNamespace = "")
        String author);

    /**
     * 
     * @param idUser
     * @param password
     * @param role
     * @param nama
     * @param email
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://blog/", className = "blog.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://blog/", className = "blog.EditUserResponse")
    public Boolean editUser(
        @WebParam(name = "idUser", targetNamespace = "")
        String idUser,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<blog.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPost", targetNamespace = "http://blog/", className = "blog.ListPost")
    @ResponseWrapper(localName = "listPostResponse", targetNamespace = "http://blog/", className = "blog.ListPostResponse")
    public List<Post> listPost();

    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<blog.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://blog/", className = "blog.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://blog/", className = "blog.SearchResponse")
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @param konten
     * @param tanggal
     * @param judul
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://blog/", className = "blog.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://blog/", className = "blog.EditPostResponse")
    public Boolean editPost(
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        XMLGregorianCalendar tanggal);

    /**
     * 
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "softDelete", targetNamespace = "http://blog/", className = "blog.SoftDelete")
    @ResponseWrapper(localName = "softDeleteResponse", targetNamespace = "http://blog/", className = "blog.SoftDeleteResponse")
    public Boolean softDelete(
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://blog/", className = "blog.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://blog/", className = "blog.PublishPostResponse")
    public Boolean publishPost(
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param idUser
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://blog/", className = "blog.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://blog/", className = "blog.DeleteUserResponse")
    public Boolean deleteUser(
        @WebParam(name = "idUser", targetNamespace = "")
        String idUser);

    /**
     * 
     * @param idPost
     * @return
     *     returns java.util.List<blog.Komentar>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://blog/", className = "blog.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://blog/", className = "blog.ListCommentResponse")
    public List<Komentar> listComment(
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @return
     *     returns java.util.List<blog.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listDeletedPost", targetNamespace = "http://blog/", className = "blog.ListDeletedPost")
    @ResponseWrapper(localName = "listDeletedPostResponse", targetNamespace = "http://blog/", className = "blog.ListDeletedPostResponse")
    public List<Post> listDeletedPost();

    /**
     * 
     * @param date
     * @param nama
     * @param konten
     * @param email
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://blog/", className = "blog.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://blog/", className = "blog.AddCommentResponse")
    public Boolean addComment(
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "date", targetNamespace = "")
        String date,
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @return
     *     returns java.util.List<blog.Pengguna>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://blog/", className = "blog.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://blog/", className = "blog.ListUserResponse")
    public List<Pengguna> listUser();

}
