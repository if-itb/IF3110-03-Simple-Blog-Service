
package heroku.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebService", targetNamespace = "http://service.heroku.chamerling.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebService {


    /**
     * 
     * @param kid
     * @return
     *     returns heroku.service.Komentar
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getKomentar", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetKomentar")
    @ResponseWrapper(localName = "getKomentarResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetKomentarResponse")
    public Komentar getKomentar(
        @WebParam(name = "KID", targetNamespace = "")
        String kid);

    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.SearchPost")
    @ResponseWrapper(localName = "searchPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.SearchPostResponse")
    public List<Post> searchPost(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @return
     *     returns java.util.List<heroku.service.UserBean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.ListUserResponse")
    public List<UserBean> listUser();

    /**
     * 
     * @param komentar
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.AddCommentResponse")
    public Boolean addComment(
        @WebParam(name = "komentar", targetNamespace = "")
        Komentar komentar);

    /**
     * 
     * @return
     *     returns java.util.List<heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPublishedPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetPublishedPost")
    @ResponseWrapper(localName = "getPublishedPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetPublishedPostResponse")
    public List<Post> getPublishedPost();

    /**
     * 
     * @param pid
     * @return
     *     returns heroku.service.Post
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetPost")
    @ResponseWrapper(localName = "getPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetPostResponse")
    public Post getPost(
        @WebParam(name = "PID", targetNamespace = "")
        String pid);

    /**
     * 
     * @return
     *     returns java.util.List<heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUnpublishedPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetUnpublishedPost")
    @ResponseWrapper(localName = "getUnpublishedPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetUnpublishedPostResponse")
    public List<Post> getUnpublishedPost();

    /**
     * 
     * @param post
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.AddPostResponse")
    public Boolean addPost(
        @WebParam(name = "post", targetNamespace = "")
        Post post);

    /**
     * 
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.DeleteUserResponse")
    public Boolean deleteUser(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param username
     * @return
     *     returns heroku.service.UserBean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.GetUserResponse")
    public UserBean getUser(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isExistUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.IsExistUser")
    @ResponseWrapper(localName = "isExistUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.IsExistUserResponse")
    public Boolean isExistUser(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param post
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.EditPostResponse")
    public Boolean editPost(
        @WebParam(name = "post", targetNamespace = "")
        Post post);

    /**
     * 
     * @param pid
     * @return
     *     returns java.util.List<heroku.service.Komentar>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.ListCommentResponse")
    public List<Komentar> listComment(
        @WebParam(name = "PID", targetNamespace = "")
        String pid);

    /**
     * 
     * @param user
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.EditUserResponse")
    public Boolean editUser(
        @WebParam(name = "user", targetNamespace = "")
        UserBean user);

    /**
     * 
     * @param pid
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.PublishPostResponse")
    public Boolean publishPost(
        @WebParam(name = "PID", targetNamespace = "")
        String pid);

    /**
     * 
     * @param user
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.AddUserResponse")
    public Boolean addUser(
        @WebParam(name = "user", targetNamespace = "")
        UserBean user);

    /**
     * 
     * @param pid
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "heroku.service.DeletePostResponse")
    public Boolean deletePost(
        @WebParam(name = "PID", targetNamespace = "")
        String pid);

}
