
package org.wbd.heroku.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FirebaseService", targetNamespace = "http://service.heroku.wbd.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FirebaseService {


    /**
     * 
     * @param username
     * @param email
     * @param name
     * @param role
     * @param password
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.AddUserResponse")
    public boolean addUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        int role);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteComment", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.DeleteComment")
    @ResponseWrapper(localName = "deleteCommentResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.DeleteCommentResponse")
    public boolean deleteComment(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.DeletePostResponse")
    public boolean deletePost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param code
     * @return
     *     returns java.util.List<org.wbd.heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPost", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListPost")
    @ResponseWrapper(localName = "listPostResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListPostResponse")
    public List<Post> listPost(
        @WebParam(name = "code", targetNamespace = "")
        int code);

    /**
     * 
     * @param id
     * @param username
     * @param email
     * @param name
     * @param role
     * @param password
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.EditUserResponse")
    public boolean editUser(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        int role);

    /**
     * 
     * @param judul
     * @param idAuthor
     * @param konten
     * @param tanggal
     * @param pictureFilename
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.AddPostResponse")
    public boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "idAuthor", targetNamespace = "")
        String idAuthor,
        @WebParam(name = "picture_filename", targetNamespace = "")
        String pictureFilename);

    /**
     * 
     * @param id
     * @param status
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setPostPublish", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.SetPostPublish")
    @ResponseWrapper(localName = "setPostPublishResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.SetPostPublishResponse")
    public boolean setPostPublish(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "status", targetNamespace = "")
        boolean status);

    /**
     * 
     * @param id
     * @param status
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setPostDelete", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.SetPostDelete")
    @ResponseWrapper(localName = "setPostDeleteResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.SetPostDeleteResponse")
    public boolean setPostDelete(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "status", targetNamespace = "")
        boolean status);

    /**
     * 
     * @param id
     * @return
     *     returns org.wbd.heroku.service.Post
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPost", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.GetPost")
    @ResponseWrapper(localName = "getPostResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.GetPostResponse")
    public Post getPost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<org.wbd.heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.SearchResponse")
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @param judul
     * @param id
     * @param konten
     * @param tanggal
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.EditPostResponse")
    public boolean editPost(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal);

    /**
     * 
     * @return
     *     returns java.util.List<org.wbd.heroku.service.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListCommentResponse")
    public List<Comment> listComment();

    /**
     * 
     * @return
     *     returns java.util.List<org.wbd.heroku.service.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListUserResponse")
    public List<User> listUser();

    /**
     * 
     * @param email
     * @param name
     * @param kontent
     * @param idPost
     * @param tanggal
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.AddCommentResponse")
    public boolean addComment(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "kontent", targetNamespace = "")
        String kontent,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "idPost", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.DeleteUserResponse")
    public boolean deleteUser(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param postId
     * @return
     *     returns java.util.List<org.wbd.heroku.service.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPostComment", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListPostComment")
    @ResponseWrapper(localName = "listPostCommentResponse", targetNamespace = "http://service.heroku.wbd.org/", className = "org.wbd.heroku.service.ListPostCommentResponse")
    public List<Comment> listPostComment(
        @WebParam(name = "post_id", targetNamespace = "")
        String postId);

}
