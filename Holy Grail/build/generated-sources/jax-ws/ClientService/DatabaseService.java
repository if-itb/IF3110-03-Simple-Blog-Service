
package ClientService;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DatabaseService", targetNamespace = "http://Service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DatabaseService {


    /**
     * 
     * @param konten
     * @param author
     * @param tanggal
     * @param judul
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://Service/", className = "ClientService.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://Service/", className = "ClientService.AddPostResponse")
    public Boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal);

    /**
     * 
     * @param password
     * @param role
     * @param id
     * @param email
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://Service/", className = "ClientService.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://Service/", className = "ClientService.EditUserResponse")
    public Boolean editUser(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param postStatus
     * @return
     *     returns java.util.List<ClientService.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPost", targetNamespace = "http://Service/", className = "ClientService.ListPost")
    @ResponseWrapper(localName = "listPostResponse", targetNamespace = "http://Service/", className = "ClientService.ListPostResponse")
    public List<Post> listPost(
        @WebParam(name = "post_status", targetNamespace = "")
        String postStatus);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://Service/", className = "ClientService.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://Service/", className = "ClientService.DeletePostResponse")
    public Boolean deletePost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param password
     * @param role
     * @param email
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://Service/", className = "ClientService.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://Service/", className = "ClientService.AddUserResponse")
    public Boolean addUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "restorePost", targetNamespace = "http://Service/", className = "ClientService.RestorePost")
    @ResponseWrapper(localName = "restorePostResponse", targetNamespace = "http://Service/", className = "ClientService.RestorePostResponse")
    public Boolean restorePost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://Service/", className = "ClientService.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://Service/", className = "ClientService.DeleteUserResponse")
    public Boolean deleteUser(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param nama
     * @param komentar
     * @param email
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://Service/", className = "ClientService.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://Service/", className = "ClientService.AddCommentResponse")
    public Boolean addComment(
        @WebParam(name = "id_post", targetNamespace = "")
        String idPost,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "komentar", targetNamespace = "")
        String komentar);

    /**
     * 
     * @return
     *     returns java.util.List<ClientService.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://Service/", className = "ClientService.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://Service/", className = "ClientService.ListUserResponse")
    public List<User> listUser();

    /**
     * 
     * @param idPost
     * @return
     *     returns java.util.List<ClientService.Komentar>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://Service/", className = "ClientService.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://Service/", className = "ClientService.ListCommentResponse")
    public List<Komentar> listComment(
        @WebParam(name = "id_post", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param konten
     * @param author
     * @param id
     * @param tanggal
     * @param judul
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://Service/", className = "ClientService.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://Service/", className = "ClientService.EditPostResponse")
    public Boolean editPost(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal);

    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<ClientService.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://Service/", className = "ClientService.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://Service/", className = "ClientService.SearchResponse")
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://Service/", className = "ClientService.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://Service/", className = "ClientService.PublishPostResponse")
    public Boolean publishPost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

}
