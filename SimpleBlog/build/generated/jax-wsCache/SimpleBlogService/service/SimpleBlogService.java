
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SimpleBlogService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimpleBlogService {


    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://service/", className = "service.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://service/", className = "service.SearchResponse")
    @Action(input = "http://service/SimpleBlogService/searchRequest", output = "http://service/SimpleBlogService/searchResponse")
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @param id
     * @return
     *     returns service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://service/", className = "service.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://service/", className = "service.GetUserResponse")
    @Action(input = "http://service/SimpleBlogService/getUserRequest", output = "http://service/SimpleBlogService/getUserResponse")
    public User getUser(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param idPost
     * @return
     *     returns java.util.List<service.Komentar>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://service/", className = "service.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://service/", className = "service.ListCommentResponse")
    @Action(input = "http://service/SimpleBlogService/listCommentRequest", output = "http://service/SimpleBlogService/listCommentResponse")
    public List<Komentar> listComment(
        @WebParam(name = "id_post", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param judul
     * @param id
     * @param konten
     * @param tanggal
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://service/", className = "service.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://service/", className = "service.EditPostResponse")
    @Action(input = "http://service/SimpleBlogService/editPostRequest", output = "http://service/SimpleBlogService/editPostResponse")
    public Boolean editPost(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @param id
     * @param email
     * @param name
     * @param role
     * @param password
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://service/", className = "service.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://service/", className = "service.EditUserResponse")
    @Action(input = "http://service/SimpleBlogService/editUserRequest", output = "http://service/SimpleBlogService/editUserResponse")
    public Boolean editUser(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param mode
     * @return
     *     returns java.util.List<service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPost", targetNamespace = "http://service/", className = "service.ListPost")
    @ResponseWrapper(localName = "listPostResponse", targetNamespace = "http://service/", className = "service.ListPostResponse")
    @Action(input = "http://service/SimpleBlogService/listPostRequest", output = "http://service/SimpleBlogService/listPostResponse")
    public List<Post> listPost(
        @WebParam(name = "mode", targetNamespace = "")
        String mode);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://service/", className = "service.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://service/", className = "service.PublishPostResponse")
    @Action(input = "http://service/SimpleBlogService/publishPostRequest", output = "http://service/SimpleBlogService/publishPostResponse")
    public Boolean publishPost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "restorePost", targetNamespace = "http://service/", className = "service.RestorePost")
    @ResponseWrapper(localName = "restorePostResponse", targetNamespace = "http://service/", className = "service.RestorePostResponse")
    @Action(input = "http://service/SimpleBlogService/restorePostRequest", output = "http://service/SimpleBlogService/restorePostResponse")
    public Boolean restorePost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @return
     *     returns java.util.List<service.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://service/", className = "service.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://service/", className = "service.ListUserResponse")
    @Action(input = "http://service/SimpleBlogService/listUserRequest", output = "http://service/SimpleBlogService/listUserResponse")
    public List<User> listUser();

    /**
     * 
     * @param email
     * @param komentar
     * @param idPost
     * @param nama
     * @param tanggal
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://service/", className = "service.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://service/", className = "service.AddCommentResponse")
    @Action(input = "http://service/SimpleBlogService/addCommentRequest", output = "http://service/SimpleBlogService/addCommentResponse")
    public Boolean addComment(
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "komentar", targetNamespace = "")
        String komentar,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "id_post", targetNamespace = "")
        String idPost);

    /**
     * 
     * @param judul
     * @param konten
     * @param tanggal
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://service/", className = "service.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://service/", className = "service.AddPostResponse")
    @Action(input = "http://service/SimpleBlogService/addPostRequest", output = "http://service/SimpleBlogService/addPostResponse")
    public Boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://service/", className = "service.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://service/", className = "service.DeleteUserResponse")
    @Action(input = "http://service/SimpleBlogService/deleteUserRequest", output = "http://service/SimpleBlogService/deleteUserResponse")
    public Boolean deleteUser(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://service/", className = "service.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://service/", className = "service.DeletePostResponse")
    @Action(input = "http://service/SimpleBlogService/deletePostRequest", output = "http://service/SimpleBlogService/deletePostResponse")
    public Boolean deletePost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param email
     * @param name
     * @param role
     * @param password
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://service/", className = "service.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://service/", className = "service.AddUserResponse")
    @Action(input = "http://service/SimpleBlogService/addUserRequest", output = "http://service/SimpleBlogService/addUserResponse")
    public Boolean addUser(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param id
     * @return
     *     returns service.Post
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPost", targetNamespace = "http://service/", className = "service.GetPost")
    @ResponseWrapper(localName = "getPostResponse", targetNamespace = "http://service/", className = "service.GetPostResponse")
    @Action(input = "http://service/SimpleBlogService/getPostRequest", output = "http://service/SimpleBlogService/getPostResponse")
    public Post getPost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

}
