
package WBD;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SimpleBlog", targetNamespace = "http://WBD/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimpleBlog {


    /**
     * 
     * @param id
     * @return
     *     returns WBD.Comment
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComment", targetNamespace = "http://WBD/", className = "WBD.GetComment")
    @ResponseWrapper(localName = "getCommentResponse", targetNamespace = "http://WBD/", className = "WBD.GetCommentResponse")
    public Comment getComment(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param nama
     * @param komentar
     * @param id
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://WBD/", className = "WBD.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://WBD/", className = "WBD.AddCommentResponse")
    public boolean addComment(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "komentar", targetNamespace = "")
        String komentar);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readUrl", targetNamespace = "http://WBD/", className = "WBD.ReadUrl")
    @ResponseWrapper(localName = "readUrlResponse", targetNamespace = "http://WBD/", className = "WBD.ReadUrlResponse")
    public String readUrl(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<WBD.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://WBD/", className = "WBD.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://WBD/", className = "WBD.ListCommentResponse")
    public List<Comment> listComment(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns WBD.Post
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPost", targetNamespace = "http://WBD/", className = "WBD.GetPost")
    @ResponseWrapper(localName = "getPostResponse", targetNamespace = "http://WBD/", className = "WBD.GetPostResponse")
    public Post getPost(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<WBD.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://WBD/", className = "WBD.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://WBD/", className = "WBD.SearchResponse")
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://WBD/", className = "WBD.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://WBD/", className = "WBD.PublishPostResponse")
    public boolean publishPost(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param status
     * @return
     *     returns java.util.List<WBD.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unpublishedPost", targetNamespace = "http://WBD/", className = "WBD.UnpublishedPost")
    @ResponseWrapper(localName = "unpublishedPostResponse", targetNamespace = "http://WBD/", className = "WBD.UnpublishedPostResponse")
    public List<Post> unpublishedPost(
        @WebParam(name = "status", targetNamespace = "")
        String status);

    /**
     * 
     * @param password
     * @param role
     * @param name
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://WBD/", className = "WBD.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://WBD/", className = "WBD.EditUserResponse")
    public boolean editUser(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns WBD.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://WBD/", className = "WBD.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://WBD/", className = "WBD.LoginResponse")
    public User login(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "literallyDeletePost", targetNamespace = "http://WBD/", className = "WBD.LiterallyDeletePost")
    @ResponseWrapper(localName = "literallyDeletePostResponse", targetNamespace = "http://WBD/", className = "WBD.LiterallyDeletePostResponse")
    public boolean literallyDeletePost(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param status
     * @return
     *     returns java.util.List<WBD.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletedPost", targetNamespace = "http://WBD/", className = "WBD.DeletedPost")
    @ResponseWrapper(localName = "deletedPostResponse", targetNamespace = "http://WBD/", className = "WBD.DeletedPostResponse")
    public List<Post> deletedPost(
        @WebParam(name = "status", targetNamespace = "")
        String status);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://WBD/", className = "WBD.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://WBD/", className = "WBD.DeletePostResponse")
    public boolean deletePost(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteComment", targetNamespace = "http://WBD/", className = "WBD.DeleteComment")
    @ResponseWrapper(localName = "deleteCommentResponse", targetNamespace = "http://WBD/", className = "WBD.DeleteCommentResponse")
    public boolean deleteComment(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param email
     * @return
     *     returns WBD.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://WBD/", className = "WBD.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://WBD/", className = "WBD.GetUserResponse")
    public User getUser(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param password
     * @param role
     * @param name
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://WBD/", className = "WBD.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://WBD/", className = "WBD.AddUserResponse")
    public boolean addUser(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://WBD/", className = "WBD.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://WBD/", className = "WBD.DeleteUserResponse")
    public boolean deleteUser(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @return
     *     returns java.util.List<WBD.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://WBD/", className = "WBD.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://WBD/", className = "WBD.ListUserResponse")
    public List<User> listUser();

    /**
     * 
     * @param konten
     * @param id
     * @param tanggal
     * @param judul
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://WBD/", className = "WBD.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://WBD/", className = "WBD.EditPostResponse")
    public boolean editPost(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeImage", targetNamespace = "http://WBD/", className = "WBD.RemoveImage")
    @ResponseWrapper(localName = "removeImageResponse", targetNamespace = "http://WBD/", className = "WBD.RemoveImageResponse")
    public boolean removeImage(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param konten
     * @param tanggal
     * @param judul
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://WBD/", className = "WBD.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://WBD/", className = "WBD.AddPostResponse")
    public boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @param status
     * @return
     *     returns java.util.List<WBD.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishedPost", targetNamespace = "http://WBD/", className = "WBD.PublishedPost")
    @ResponseWrapper(localName = "publishedPostResponse", targetNamespace = "http://WBD/", className = "WBD.PublishedPostResponse")
    public List<Post> publishedPost(
        @WebParam(name = "status", targetNamespace = "")
        String status);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "undeletePost", targetNamespace = "http://WBD/", className = "WBD.UndeletePost")
    @ResponseWrapper(localName = "undeletePostResponse", targetNamespace = "http://WBD/", className = "WBD.UndeletePostResponse")
    public boolean undeletePost(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param filename
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addImage", targetNamespace = "http://WBD/", className = "WBD.AddImage")
    @ResponseWrapper(localName = "addImageResponse", targetNamespace = "http://WBD/", className = "WBD.AddImageResponse")
    public boolean addImage(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "filename", targetNamespace = "")
        String filename);

}
