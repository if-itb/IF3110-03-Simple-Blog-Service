
package org.chamerling.heroku.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HelloService", targetNamespace = "http://service.heroku.chamerling.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HelloService {


    /**
     * 
     * @param judul
     * @param konten
     * @param tanggal
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.AddPostResponse")
    public Boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal);

    /**
     * 
     * @return
     *     returns java.util.List<org.chamerling.heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPublishedPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListPublishedPost")
    @ResponseWrapper(localName = "listPublishedPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListPublishedPostResponse")
    public List<Post> listPublishedPost();

    /**
     * 
     * @param uid
     * @param email
     * @param role
     * @param nama
     * @param password
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.EditUserResponse")
    public boolean editUser(
        @WebParam(name = "uid", targetNamespace = "")
        String uid,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayHi", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.SayHi")
    @ResponseWrapper(localName = "sayHiResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.SayHiResponse")
    public String sayHi(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param pid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.DeletePost")
    @ResponseWrapper(localName = "deletePostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.DeletePostResponse")
    public boolean deletePost(
        @WebParam(name = "pid", targetNamespace = "")
        String pid);

    /**
     * 
     * @param email
     * @param role
     * @param nama
     * @param password
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.AddUserResponse")
    public boolean addUser(
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        String role,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<org.chamerling.heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUnpublishedPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListUnpublishedPost")
    @ResponseWrapper(localName = "listUnpublishedPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListUnpublishedPostResponse")
    public List<Post> listUnpublishedPost();

    /**
     * 
     * @param uid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.DeleteUserResponse")
    public boolean deleteUser(
        @WebParam(name = "uid", targetNamespace = "")
        String uid);

    /**
     * 
     * @param url
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getData", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.GetData")
    @ResponseWrapper(localName = "getDataResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.GetDataResponse")
    public String getData(
        @WebParam(name = "url", targetNamespace = "")
        String url);

    /**
     * 
     * @param pid
     * @return
     *     returns java.util.List<org.chamerling.heroku.service.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListCommentResponse")
    public List<Comment> listComment(
        @WebParam(name = "pid", targetNamespace = "")
        String pid);

    /**
     * 
     * @param email
     * @param konten
     * @param pid
     * @param nama
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.AddCommentResponse")
    public boolean addComment(
        @WebParam(name = "pid", targetNamespace = "")
        String pid,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @return
     *     returns java.util.List<org.chamerling.heroku.service.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.ListUserResponse")
    public List<User> listUser();

    /**
     * 
     * @param pid
     * @return
     *     returns org.chamerling.heroku.service.Post
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.GetPost")
    @ResponseWrapper(localName = "getPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.GetPostResponse")
    public Post getPost(
        @WebParam(name = "pid", targetNamespace = "")
        String pid);

    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<org.chamerling.heroku.service.Post>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.SearchResponse")
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query);

    /**
     * 
     * @param judul
     * @param konten
     * @param pid
     * @param published
     * @param tanggal
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.EditPostResponse")
    public boolean editPost(
        @WebParam(name = "pid", targetNamespace = "")
        String pid,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "published", targetNamespace = "")
        Boolean published);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "tambah", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.Tambah")
    @ResponseWrapper(localName = "tambahResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.TambahResponse")
    public Integer tambah(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Integer arg1);

    /**
     * 
     * @param pid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://service.heroku.chamerling.org/", className = "org.chamerling.heroku.service.PublishPostResponse")
    public boolean publishPost(
        @WebParam(name = "pid", targetNamespace = "")
        String pid);

}
